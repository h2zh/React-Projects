{"ast":null,"code":"var _jsxFileName = \"/Users/evanyou/Documents/React-Projects/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filterYear, changeFilterYear] = useState(\"2020\");\n\n  const filterChangeHandler = year => {\n    changeFilterYear(year);\n  }; // If you've already got data in a component and you just want to \n  // change how it render (e.g. how many elements in an array should be rendered), \n  // then a transformation like this should be enough:\n\n\n  const selectedExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filterYear;\n  });\n\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No matched expense.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 24\n  }, this);\n\n  if (selectedExpenses.length > 0) {\n    expenseContent = selectedExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        onFilter: filterChangeHandler,\n        selectedYear: filterYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), expenseContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"xvCUq1P+yw2SDLpkkFYLg5/acyI=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","ExpensesFilter","Card","Expenses","props","filterYear","changeFilterYear","filterChangeHandler","year","selectedExpenses","items","filter","expense","date","getFullYear","toString","expenseContent","length","map","title","amount","id"],"sources":["/Users/evanyou/Documents/React-Projects/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\n\nfunction Expenses(props) {\n  const [filterYear, changeFilterYear] = useState(\"2020\");\n\n  const filterChangeHandler = (year) => {\n    changeFilterYear(year);\n  };\n\n  // If you've already got data in a component and you just want to \n  // change how it render (e.g. how many elements in an array should be rendered), \n  // then a transformation like this should be enough:\n  const selectedExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filterYear;\n  });\n\n  let expenseContent = <p>No matched expense.</p>;\n  if( selectedExpenses.length > 0){\n    expenseContent = selectedExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ));\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          onFilter={filterChangeHandler}\n          selectedYear={filterYear}\n        />\n        {expenseContent}\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACvB,MAAM,CAACC,UAAD,EAAaC,gBAAb,IAAiCP,QAAQ,CAAC,MAAD,CAA/C;;EAEA,MAAMQ,mBAAmB,GAAIC,IAAD,IAAU;IACpCF,gBAAgB,CAACE,IAAD,CAAhB;EACD,CAFD,CAHuB,CAOvB;EACA;EACA;;;EACA,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;IACrD,OAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,UAAjD;EACD,CAFwB,CAAzB;;EAIA,IAAIW,cAAc,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAArB;;EACA,IAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAgC;IAC9BD,cAAc,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACpC,QAAC,WAAD;MAEE,KAAK,EAAEA,OAAO,CAACO,KAFjB;MAGE,MAAM,EAAEP,OAAO,CAACQ,MAHlB;MAIE,IAAI,EAAER,OAAO,CAACC;IAJhB,GACOD,OAAO,CAACS,EADf;MAAA;MAAA;MAAA;IAAA,QADe,CAAjB;EAQD;;EAED,oBACE;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,EAAC,UAAhB;MAAA,wBACE,QAAC,cAAD;QACE,QAAQ,EAAEd,mBADZ;QAEE,YAAY,EAAEF;MAFhB;QAAA;QAAA;QAAA;MAAA,QADF,EAKGW,cALH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GArCQb,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}